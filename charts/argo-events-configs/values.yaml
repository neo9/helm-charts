appName: example-app

# Eventbus where EventSouces will emit events and listen by Sensors
eventBus:
  # -- event bus name
  name: default
  # -- event bus replicas
  replicas: 3

#  Ingresses used by the webhooks used to trigger argo workflow actions
ingress:
  # -- enable ingress
  enabled: true
  ingressClassName: nginx
  # -- Annotations are used to configure the ingress controller
  annotations: {}
  tls: true

rbac:
  # -- ServiceAccount used by argo-events, only one by default for this version
  serviceAccountName: operate-workflow-sa

# Webhooks definition (only one with several events for this version)
webhooks:
  # -- webhook name
  - name: example-webhook
    url: example-webhook.example.com
    events:
    # -- Events for this webhook, it has to be mapped with ingress setup
      - event: some-event
        port: "12000"
        endpoint: /some-event
    tls: 
      hosts:
        - example-webhook.example.com
      secretName: argo-example-webhook-tls
    triggers:          
      - template:
          conditions: "vpn-remove-user-from-group"
          name: webhook-workflow-trigger-vpn-remove-user-from-group
          k8s:
            operation: create
            parameters:
              - src:
                  dependencyName: some-event
                  dataKey: body.message
                dest: spec.arguments.parameters.1.value
            source:
              resource:
                apiVersion: argoproj.io/v1alpha1
                kind: Workflow
                metadata:
                  generateName: webhook-
                  namespace: argo
                spec:
                  arguments:
                    parameters:
                    - name: message
                  entrypoint: vpn-script
                  workflowTemplateRef:
                    name: hello-world
                    clusterScope: true