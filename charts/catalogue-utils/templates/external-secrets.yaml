{{- if (index .Values "external-secrets" "enabled") -}}
{{- range $api, $services := (index .Values "external-secrets" "schema") }}
{{- if get $.Values.catalogue $api }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: catalogue-{{ $api }}
spec:
  refreshInterval: "1m"
  secretStoreRef:
    name: {{ ((index $.Values "external-secrets").secretStoreRef).name | default (printf "k8s-%s" $.Release.Namespace) }}
    kind: {{ ((index $.Values "external-secrets").secretStoreRef).kind | default "ClusterSecretStore" }}
  target:
    creationPolicy: Merge
    template:
      data:
        {{- if has "elasticsearch" $services }}
        ELASTICSEARCH_URI: "{{ `{{ .eck_uri }}` }}"
        {{- end }}
        {{- if has "mongodb" $services }}
        MONGODB_URI: mongodb://{{ `{{ .mongodb_username }}` }}:{{ `{{ .mongodb_password }}` }}@{{ default ($.Values.mongodb).fullnameOverride ($.Values.mongodb).name "catalogue-mongodb" }}-svc/{{ `{{ .mongodb_username }}` }}?readPreference=primaryPreferred&replicaSet={{ default ($.Values.mongodb).fullnameOverride ($.Values.mongodb).name "catalogue-mongodb" }}
        {{- end }}
        {{- if has "rabbitmq" $services }}
        RABBITMQ_URI: amqp://{{ `{{ .rabbitmq_username }}` }}:{{ `{{ .rabbitmq_password }}` }}@{{ default ($.Values.rabbitmq).fullnameOverride ($.Values.rabbitmq).name "catalogue-rabbitmq" }}/catalogue
        {{- end }}
        {{- if has "bucket" $services }}
        GCS_BUCKET_NAME: {{ index $.Values "external-secrets" "bucketName" $api }}
        {{- end }}
        {{- if and (has "google_service_account" $services) ( index $.Values "crossplane-buckets" "enabled") }}
        GOOGLE_SERVICE_ACCOUNT_JSON: "{{ `{{ .google_service_account }}` }}"
        {{- end }}
  {{- if coalesce (has "mongodb" $services) (has "rabbitmq" $services) (has "elasticsearch" $services) (and (has "google_service_account" $services) ( index $.Values "crossplane-buckets" "enabled")) }}
  data:
    {{- if has "elasticsearch" $services }}
    - secretKey: eck_uri
      remoteRef:
        key: catalogue-eck-uri
        property: ELASTICSEARCH_URI
    {{- end }}
    {{- if has "mongodb" $services }}
    - secretKey: mongodb_username
      remoteRef:
        key: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.mongodb_username.key" $api) "default" (printf "catalogue-mongodb-catalogue-%s-catalogue-%s" $api $api)) }}
        property: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.mongodb_username.property" $api) "default" "username") }}
    - secretKey: mongodb_password
      remoteRef:
        key: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.mongodb_password.key" $api) "default" (printf "catalogue-mongodb-catalogue-%s-catalogue-%s" $api $api)) }}
        property: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.mongodb_password.property" $api) "default" "password") }}
    {{- end }}
    {{- if has "rabbitmq" $services }}
    - secretKey: rabbitmq_username
      remoteRef:
        key: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.rabbitmq_username.key" $api) "default" (printf "catalogue-rabbitmq-user-%s-user-credentials" $api)) }}
        property: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.rabbitmq_username.property" $api) "default" "username") }}
    - secretKey: rabbitmq_password
      remoteRef:
        key: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.rabbitmq_password.key" $api) "default" (printf "catalogue-rabbitmq-user-%s-user-credentials" $api)) }}
        property: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.rabbitmq_password.property" $api) "default" "password") }}
    {{- end }}
    {{- if and (has "google_service_account" $services) ( index $.Values "crossplane-buckets" "enabled") }}
    - secretKey: google_service_account
      remoteRef:
        key: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.google_service_account.key" $api) "default" "") | default (index $.Values "crossplane-buckets" "shareServiceAccount" "name") }}
        property: {{ include "dig" (dict "map" $.Values "key" (printf "external-secrets.secrets.catalogue-%s.google_service_account.property" $api) "default" "privateKey") }}
    {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}