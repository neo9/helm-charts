imagePullPolicy: Always

akeneo:
  version: 5.0
  # Replicas >= 2 require a shared session storage (ie. DB, Redis)
  replicas: 1
  ingress:
    enabled: false
    className: ""
    labels: {}
    annotations: {}
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # Port the container is listening on
  service:
    type: ClusterIP
    port: 80

  livenessProbe:
    failureThreshold: 50
    httpGet:
      path: /user/login
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 3
    periodSeconds: 10
    successThreshold: 1
    tcpSocket:
      port: 80
    timeoutSeconds: 1
  resources:
    requests:
      memory: 400M
      cpu: 250m
  queueConsumer:
    enabled: true

  nodeSelector: {}
  affinity: {}
  tolerations: []

mysql:
  external: false
  image: mysql:8.0
  user: akeneo
  password: akeneo
  # Specify when external
  # host: mysql
  port: 3306
  database: akeneo
  storage:
    size: 10Gi
    class:
  resources:
    requests:
      memory: 800M
      cpu: 250m
  nodeSelector: {}
  affinity: {}
  tolerations: []

elasticsearch:
  external: false
  image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.5.2
  # Specify when external
  # host: elasticsearch
  port: 9200
  replicas: 1
  minMasterNodes: 1
  memory: 512m
  storage:
    size: 10Gi
    class: ""
  resources:
    requests:
      memory: 800M
      cpu: 800m
  nodeSelector: {}
  affinity: {}
  tolerations: []

minio:
  enabled: true
  fullnameOverride: akeneo-minio
  defaultBuckets: akeneo
  disableWebUI: false
  ingress:
    enabled: false
    ingressClassName: ""
    hostname: ""
    tls: false
    labels: {}
    annotations: {}
  resources:
    requests:
      memory: 600M
      cpu: 50m
  auth:
    rootUser: admin
    # -- It's set in value to be shared easily to akeneo, as its intended for demo
    rootPassword: l3c1umzafbe435u5jpt38kc1ttwr03b52l5t9spgtq5njcmqzsnqxyat1eslgamg
    forceNewKeys: true
  persistence:
    storageClass: ""
    size: 8Gi
  nodeSelector: {}
  affinity: {}
  tolerations: []